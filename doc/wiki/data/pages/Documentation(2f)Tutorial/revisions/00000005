#pragma section-numbers off

<<TableOfContents>>

= Introduction =

This is simple tutorial to help beginners evaluate Jackie.

= Step #1: Download =

{{{
# this is install POM URL 
# (check http://archiva.greenhorn.sk/archiva/repository/snapshots/org/jackie/org.jackie.install for updates)
$> install_pom="http://archiva.greenhorn.sk/archiva/repository/snapshots/org/jackie/org.jackie.install/0.1-SNAPSHOT/org.jackie.install-0.1-20081105.211313-36.pom"

# installation directory (customize this)
$> install_dir="$HOME/java/jackie" 

# let's start
$> cd $install_dir

# download it
$> wget -O pom.xml $install_pom
}}}


= Step #2: Install =

<!> For extra details, see [[Installation]].

{{{
$> mvn -Psetup
}}}

Have a break. This may take some time. In the meantime, check out other stuff on this site :-)

Now, you may be interested in javadocs and/or sources. Following additional properties do the trick:

{{{
$> mvn -Psetup -Dsources=true -Djavadocs=true
}}}



= Step #3: Explore results =

Jackie libraries are installed into your '''maven repository''' (usually ~/.m2/repository)
Jackie documentation and user scripts are installed into the '''installation directory''' you configured above.

In your maven repository, you should see something like this:

{{{
# go to the groupId directory
$> cd ~/.m2/repository/org/jackie

# see what artifacts are there...
$> ls -1 
org.jackie
org.jackie.asmtools
org.jackie.bin
org.jackie.compiler
org.jackie.compilerimpl
org.jackie.context
org.jackie.event
org.jackie.install
org.jackie.java5
org.jackie.jclassfile
org.jackie.jvm
org.jackie.test
org.jackie.tools
org.jackie.utils
}}}

Now explore installation directory:

{{{
$> find bin
bin/
bin/.classpath
bin/jackie_compiler.sh
bin/jackie_shell.sh
}}}

= Step #4: Use It =

Just run {{{jackie_compiler.sh}}} to see what it can do:

{{{
$> bin/jackie_compiler.sh           
Error: Missing option srcdir
Usage: org.jackie.tools.Main [name=value] ... 
Options:
    NAME              TYPE       MANDATORY  DESCRIPTION (DEFAULT VALUE)
    srcdir            File       Y          Source tree directory (null)
    classpath         File[]     Y          Class path (null)
    jarname           File       Y          Output jar file name (null)
    overwrite         Boolean               Overwrite output file? (false)
    showprogress      Boolean               Show compilation progress? (true)
    help              Boolean               Show usage help (false)
}}}

Now, you see what parameters jackie needs. And this is a brief list of differences from what you might have expected:

 * Jackie compiles source directory {{{srcdir}}}, not individual source files. All source files in a given directory are compiled
 * Jackie compiles into jar file {{{jarname}}}, not into a directory or beside source files.
 * Jackie needs class path {{{classpath}}} as it is not bound to any JDK or JRE. It needs at least {{{rt.jar}}} with {{{java.lang.Object}}} on classpath

So, try it
